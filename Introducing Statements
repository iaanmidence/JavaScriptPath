//Else Statements > When a condition for an if statement is true, the block of code following it is executed.What about when that condition is false?
Normally nothing would happen. With an else statement, an alternate block of code can be executed:

if (num > 10) {
  return "Bigger than 10!";
  } else {
    return "10 or Less!";
    }



//Else If Statements > If you have multiple conditions that need to be addressed, you can chain if statements together with else if statements.

if(num > 15){
  return "Bigger than 15";
} else if (num < 5) {
  return "Smaller than 5";
} else {
  return "Between 5 and 15";
}



//Logical Order in If Else Statements > Order is important in `if`, `else if` statements.
The function is executed from top to bottom so you will want to be careful of what statement comes first. 
Take these two functions as an example:

function foo(x) {
  if (x < 1) {
    return "Less than one!";
  } else if (x < 2) {
    return "Less than two!";
  } else {
    return "Greater than or equal to two";
  }
}

And the second just switches the order of Statements:

function bar(x) {
  if (x < 2) {
    return "Less than two";
  } else if (x < 1) {
    return "Less than one";
  } else {
    return "Greater than or equal to two";
  }
}

While these two functions look nearly identical if we pass a number to both we get different outputs.
foo(0)
bar(0)


*So be careful while using the if, else if and else statements and always remember that these are 
executed from top to bottom. Keep this in mind placing your statements accordingly so that you get the desired output.*
